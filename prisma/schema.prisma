generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model LoginAttempts {
  Id          String    @id(map: "PK__LoginAtt__3214EC0797A7CD8F") @default(dbgenerated("newid()"), map: "DF__LoginAttempt__Id__5535A963") @db.UniqueIdentifier
  IpAddress   String    @db.NVarChar(45)
  Username    String?   @db.NVarChar(50)
  Success     Boolean
  AttemptedAt DateTime? @default(now(), map: "DF__LoginAtte__Attem__5629CD9C") @db.DateTime

  @@index([AttemptedAt], map: "IX_LoginAttempts_AttemptedAt")
  @@index([IpAddress], map: "IX_LoginAttempts_IpAddress")
  @@index([Username], map: "IX_LoginAttempts_Username")
}

model OrderItems {
  Id        Int      @id(map: "PK__OrderIte__3214EC076E51C2AD") @default(autoincrement())
  OrderId   Int
  ProductId Int
  Quantity  Int      @default(1, map: "DF__OrderItem__Quant__47DBAE45")
  Price     Decimal  @db.Decimal(18, 2)
  Orders    Orders   @relation(fields: [OrderId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_OrderItems_Orders")
  Products  Products @relation(fields: [ProductId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_OrderItems_Products")

  @@index([OrderId], map: "IX_OrderItems_OrderId")
  @@index([ProductId], map: "IX_OrderItems_ProductId")
}

model Orders {
  Id            Int          @id(map: "PK__Orders__3214EC0740795220") @default(autoincrement())
  UserId        String       @db.UniqueIdentifier
  CreatedAt     DateTime     @default(now(), map: "DF__Orders__CreatedA__4222D4EF") @db.DateTime
  Total         Decimal      @default(0, map: "DF__Orders__Total__4316F928") @db.Decimal(18, 2)
  Status        String       @default("pending", map: "DF__Orders__Status__440B1D61") @db.NVarChar(50)
  PaymentMethod String?      @db.NVarChar(50)
  Notes         String?      @db.NVarChar(255)
  OrderItems    OrderItems[]
  Users         Users        @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Orders_Users")

  @@index([CreatedAt], map: "IX_Orders_CreatedAt")
  @@index([Status], map: "IX_Orders_Status")
  @@index([UserId], map: "IX_Orders_UserId")
}

model Products {
  Id            Int          @id(map: "PK__Products__3214EC07BE189123") @default(autoincrement())
  Name          String       @db.NVarChar(255)
  Description   String?      @db.NVarChar(Max)
  Image         String?      @db.NVarChar(500)
  Category      String?      @db.NVarChar(100)
  Price         Decimal      @db.Decimal(18, 2)
  OriginalPrice Decimal?     @db.Decimal(18, 2)
  Stock         Int
  Rating        Float?
  Reviews       Int?
  Colors        String?      @db.NVarChar(100)
  Sizes         String?      @db.NVarChar(100)
  OrderItems    OrderItems[]
}

model RefreshTokens {
  Id        String    @id(map: "PK__RefreshT__3214EC07BC7DB2DA") @default(dbgenerated("newid()"), map: "DF__RefreshToken__Id__4F7CD00D") @db.UniqueIdentifier
  UserId    String    @db.UniqueIdentifier
  Token     String    @unique(map: "UQ__RefreshT__1EB4F81784C4A03A") @db.NVarChar(500)
  ExpiresAt DateTime  @db.DateTime
  CreatedAt DateTime? @default(now(), map: "DF__RefreshTo__Creat__5070F446") @db.DateTime
  Revoked   Boolean?  @default(false, map: "DF__RefreshTo__Revok__5165187F")
  Users     Users     @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_RefreshTokens_Users")

  @@index([ExpiresAt], map: "IX_RefreshTokens_ExpiresAt")
  @@index([Token], map: "IX_RefreshTokens_Token")
  @@index([UserId], map: "IX_RefreshTokens_UserId")
}

model Users {
  Id            String          @id(map: "PK__Users__3214EC07E459DFD3") @default(dbgenerated("newid()"), map: "DF__Users__Id__38996AB5") @db.UniqueIdentifier
  Username      String          @unique(map: "UQ__Users__536C85E4907E9CE7") @db.NVarChar(50)
  Email         String?         @db.NVarChar(255)
  PasswordHash  String          @db.NVarChar(255)
  Role          String          @default("user", map: "DF__Users__Role__398D8EEE") @db.NVarChar(20)
  IsActive      Boolean?        @default(true, map: "DF__Users__IsActive__3A81B327")
  EmailVerified Boolean?        @default(false, map: "DF__Users__EmailVeri__3B75D760")
  CreatedAt     DateTime?       @default(now(), map: "DF__Users__CreatedAt__3C69FB99") @db.DateTime
  UpdatedAt     DateTime?       @default(now(), map: "DF__Users__UpdatedAt__3D5E1FD2") @db.DateTime
  LastLogin     DateTime?       @db.DateTime
  Phone         String?         @db.NVarChar(20)
  Name          String?         @db.NVarChar(100)
  Address       String?         @db.NVarChar(255)
  Orders        Orders[]
  RefreshTokens RefreshTokens[]

  @@index([Email], map: "IX_Users_Email")
  @@index([Role], map: "IX_Users_Role")
  @@index([Username], map: "IX_Users_Username")
  @@map("Users")
}

model Banners {
  Id              Int       @id(map: "PK__Banners__3214EC079771EA19") @default(autoincrement())
  Title           String    @db.NVarChar(255)
  Subtitle        String?   @db.NVarChar(500)
  Description     String?
  Image           String    @db.NVarChar(500)
  ButtonText      String?   @db.NVarChar(100)
  ButtonLink      String?   @db.NVarChar(500)
  BackgroundColor String?   @db.NVarChar(100)
  IsActive        Boolean?  @default(true, map: "DF__Banners__IsActiv__59063A47")
  DisplayOrder    Int?      @default(0, map: "DF__Banners__Display__59FA5E80")
  CreatedAt       DateTime? @default(now(), map: "DF__Banners__Created__5AEE82B9") @db.DateTime
  UpdatedAt       DateTime? @default(now(), map: "DF__Banners__Updated__5BE2A6F2") @db.DateTime

  @@index([DisplayOrder], map: "IX_Banners_DisplayOrder")
  @@index([IsActive], map: "IX_Banners_IsActive")
}
